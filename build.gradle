plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'com.palantir.docker' version '0.25.0'
	id 'com.palantir.docker-run' version '0.25.0'
}

group = 'com.pkg'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.12'

	// Lombok Annotation
	compileOnly 'org.projectlombok:lombok:1.18.12'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'

	// Spring retry
	compile group: 'org.springframework.retry', name: 'spring-retry', version: '1.2.1.RELEASE'


	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}


String dockerHubUsernameProperty = findProperty('dockerHubUsername') ?: 'justacoder7'
String imageName = "${dockerHubUsernameProperty}/football-league-app:$version"

docker {
	name imageName
	files "build/libs/${bootJar.archiveFileName.get()}"
	buildArgs([JAR_FILE: bootJar.archiveFileName.get()])
}

dockerRun {
	name project.name
	image imageName
	ports '8090:8080'
	clean true
}